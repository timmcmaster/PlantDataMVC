@using SaleEventStock = PlantDataMVC.Web.Models.ViewModels.SaleEventStock

@model SaleEventStockGridViewModel
@{
    SaleEventStock.SaleEventStockListViewModel sampleElement = new SaleEventStock.SaleEventStockListViewModel();
}
<div class="container-lg">
    @if (Model.Options.AllowAdd)
    {
        <a asp-controller="@PlantDataMvcAppControllers.SeedBatch" asp-action="New">Add New Item</a>
    }
    <table class="table border">
        <thead>
            <tr>
                <th scope="col">@Html.ColumnHeaderFor(m => sampleElement.SpeciesBinomial, Model.Options.AllowSorting)</th>
                <th scope="col">@Html.ColumnHeaderFor(m => sampleElement.ProductTypeName, Model.Options.AllowSorting)</th>
                <th scope="col">@Html.ColumnHeaderFor(m => sampleElement.Quantity, Model.Options.AllowSorting)</th>
            </tr>
        </thead>
        <tbody>
            @{
                int count = 0;
                foreach (var entry in Model.Items)
                {
                    <tr>
                        <td>@Html.DisplayFor(m => m.Items.ElementAt(count).SpeciesBinomial)</td>
                        <td>@Html.DisplayFor(m => m.Items.ElementAt(count).ProductTypeName)</td>
                        <td>@Html.DisplayFor(m => m.Items.ElementAt(count).Quantity)</td>
                    </tr>
                    count++;
                }
            }
        </tbody>
    </table>
    @if (Model.Options.AllowPaging)
    {
        @Html.PagingLinksFor(m => Model)
    }
</div>