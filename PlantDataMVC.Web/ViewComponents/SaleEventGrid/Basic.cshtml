@using SaleEvent = PlantDataMVC.Web.Models.ViewModels.SaleEvent

@model ListViewModelStatic<SaleEvent.SaleEventListViewModel>

@{
    SaleEvent.SaleEventListViewModel sampleElement = new SaleEvent.SaleEventListViewModel();   
}
@if (Model.ShowAddItem)
{
    <a asp-controller="@PlantDataMvcAppControllers.SaleEvent" asp-action="New">Add New Item</a>
}
<table class="grid">
    <tr>
        <th>@Html.ColumnHeaderFor(m => sampleElement.Name)</th>
        <th>@Html.ColumnHeaderFor(m => sampleElement.SaleDate)</th>
        <th>@Html.ColumnHeaderFor(m => sampleElement.Location)</th>
        <th></th>
        <th></th>
        <th></th>
    </tr>

@{
int count = 0;
foreach (var entry in Model) {
    <tr>
        <td><a asp-controller=@PlantDataMvcAppControllers.SaleEvent asp-action="Show" asp-route-id="@entry.Id">@entry.Name</a></td>
        <td>@Html.DisplayFor(m => m.ElementAt(count).SaleDate)</td>
        <td>@Html.DisplayFor(m => m.ElementAt(count).Location)</td>
        <td><a asp-controller=@PlantDataMvcAppControllers.SaleEvent asp-action="Details" asp-route-id="@entry.Id">Stock List</a></td>
        <td><a asp-controller=@PlantDataMvcAppControllers.SaleEvent asp-action="Edit" asp-route-id="@entry.Id">Edit</a></td>
        <td><a asp-controller=@PlantDataMvcAppControllers.SaleEvent asp-action="Delete" asp-route-id="@entry.Id">Delete</a></td>
    </tr>
    count++;
}
}
</table>
@if (Model.ShowPagingLinks)
{
    @Html.PagingLinksFor(m => Model)
}
