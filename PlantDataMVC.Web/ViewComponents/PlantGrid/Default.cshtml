@using Plant = PlantDataMVC.Web.Models.ViewModels.Plant

@inject PlantDataMVC.Web.Services.IGenusLookupService genusLookup

@model PlantGridViewModel
@{
    Plant.PlantListViewModel sampleElement = new Plant.PlantListViewModel();
    var genusForeignData = genusLookup.GetOrderedData(x => x.LatinName).Select(p => new { GenusId = p.Id, LatinName = p.LatinName }).ToList();
}
<div class="container-lg">
    <ejs-grid id="PlantGrid"
              allowPaging="@Model.Options.AllowPaging"
              allowSorting="@Model.Options.AllowSorting"
              actionBegin="actionBegin"
              actionComplete="actionComplete"
              height="550" width="800"
              toolbar="@Model.Options.ToolbarItems">
        <e-data-manager adaptor="UrlAdaptor"
                        url="@Url.Action("UrlDatasource", @PlantDataMvcAppControllers.PlantGrid, new { allowPaging = $"{Model.Options.AllowPaging}" })"
                        insertUrl="@Url.Action("Insert", @PlantDataMvcAppControllers.PlantGrid)"
                        updateUrl="@Url.Action("Update", @PlantDataMvcAppControllers.PlantGrid)"
                        removeUrl="@Url.Action("Delete", @PlantDataMvcAppControllers.PlantGrid)">
        </e-data-manager>
        <e-grid-pagesettings pageSize="@Model.PageSize" currentPage="@Model.PageNumber"></e-grid-pagesettings>
        <e-grid-editsettings allowAdding="@Model.Options.AllowAdd" allowEditing="@Model.Options.AllowEdit" allowDeleting="@Model.Options.AllowDelete"></e-grid-editsettings>
        <e-grid-columns>
            <e-grid-column field="@nameof(sampleElement.Id)" headerText="@Html.DisplayNameFor(x => sampleElement.Id)" visible="false" isPrimaryKey="true"></e-grid-column>
            <e-grid-column field="@nameof(sampleElement.Binomial)" headerText="@Html.DisplayNameFor(x => sampleElement.Binomial)" allowEditing="false"></e-grid-column>
            <e-grid-column field="@nameof(sampleElement.GenusId)" headerText="@Html.DisplayNameFor(x => sampleElement.Genus)" visible="false" foreignKeyValue="LatinName" dataSource="@genusForeignData"></e-grid-column>
            <e-grid-column field="@nameof(sampleElement.Species)" headerText="@Html.DisplayNameFor(x => sampleElement.Species)" visible="false"></e-grid-column>
            <e-grid-column field="@nameof(sampleElement.CommonName)" headerText="@Html.DisplayNameFor(x => sampleElement.CommonName)"></e-grid-column>
            <e-grid-column field="@nameof(sampleElement.Native)" headerText="@Html.DisplayNameFor(x => sampleElement.Native)" type="boolean" editType="booleanedit" displayAsCheckBox="true"></e-grid-column>
            <e-grid-column headerText="View Details" template="#detailsTemplate" width="150" allowEditing="false"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
</div>
<script id="detailsTemplate" type="text/x-template">
    <div>
        <a href="/Plant/Show/${Id}">Details</a>
    </div>
</script>
<script>
    function actionBegin(args) {
        if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {
            for (var i = 0; i < this.columns.length; i++) {
                if ((this.columns[i].field == "GenusId")  || (this.columns[i].field == "SpeciesName")) {
                    this.columns[i].visible = true;
                }
                //else if (this.columns[i].field == "Binomial") {
                //    this.columns[i].visible = false;
                //}
            }
        }
    }

    function actionComplete(args) {
        if (args.requestType === 'save') {
            for (var i = 0; i < this.columns.length; i++) {
                if ((this.columns[i].field == "GenusId") || (this.columns[i].field == "SpeciesName")) {
                    this.columns[i].visible = false;
                }
                //else if (this.columns[i].field == "Binomial") {
                //    this.columns[i].visible = true;
                //}
            }
        }
    }
</script>
<style>
    .e-grid .e-row .e-rowcell {
        padding-top: 2px;
        padding-bottom: 2px;
    }
</style>