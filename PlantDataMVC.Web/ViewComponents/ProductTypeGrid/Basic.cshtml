@using ProductType = PlantDataMVC.Web.Models.ViewModels.ProductType

@model ProductTypeGridViewModel

@{
    ProductType.ProductTypeListViewModel sampleElement = new ProductType.ProductTypeListViewModel();
}
@if (Model.Options.AllowAdd)
{
    <a asp-controller="@PlantDataMvcAppControllers.ProductType" asp-action="New">Add New Item</a>
}
<table class="grid">
    <tr>
        <th>@Html.ColumnHeaderFor(m => sampleElement.Name, Model.Options.AllowSorting)</th>
        @if (Model.Options.AllowEdit)
        {
            <th></th>
        }
        @if (Model.Options.AllowDelete)
        {
            <th></th>
        }
    </tr>


    @{
        int count = 0;
        foreach (var entry in Model.Items)
        {
            <tr>
                <td><a asp-controller=@PlantDataMvcAppControllers.ProductType asp-action="Show" asp-route-id="@entry.Id">@entry.Name</a></td>
                @if (Model.Options.AllowEdit)
                {
                    <td><a asp-controller=@PlantDataMvcAppControllers.ProductType asp-action="Edit" asp-route-id="@entry.Id">Edit</a></td>
                }
                @if (Model.Options.AllowDelete)
                {
                    <td><a asp-controller=@PlantDataMvcAppControllers.ProductType asp-action="Delete" asp-route-id="@entry.Id">Delete</a></td>
                }
            </tr>
            count++;
        }
    }
</table>
@if (Model.Options.AllowPaging)
{
    @Html.PagingLinksFor(m => Model)
}
