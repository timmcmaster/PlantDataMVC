@functions {
    enum CssSource { FromCdn, FromBundledLocal, FromFullLocal };
    enum JsSource { FromCdn, FromBundledLocal, FromFullLocal };
}
@{
    // Set up as for non-dev
    CssSource PackageCss = CssSource.FromCdn;
    CssSource CustomCss = CssSource.FromFullLocal;

    JsSource PackageJs = JsSource.FromCdn;
    JsSource CustomJs = JsSource.FromBundledLocal;

    string environmentName = "";
}


<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>

    <!-- use full versions of css & scripts when in dev env -->
    <environment include="Development">
        @{
            environmentName = "Development";

            // Set up for dev
            PackageCss = CssSource.FromCdn;
            CustomCss = CssSource.FromFullLocal;

            PackageJs = JsSource.FromCdn;
            CustomJs = JsSource.FromFullLocal;
        }
    </environment>

    <!-- use bundled and/or minified versions when in other envs -->
    <environment exclude="Development">
        @{
            environmentName = "Non-Development";
        }
    </environment>

    @{
        switch (PackageCss)
        {
            case (CssSource.FromCdn):
                //<!-- jquery UI (base theme) -->
                //<link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
                //<!--bootstrap-->
                //<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" rel="stylesheet" />
                //<!--open layers mapping-->
                <link href="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.1.3/css/ol.css" rel="stylesheet" type="text/css">
                <!-- Syncfusion ASP.NET Core controls styles -->
                <link href="https://cdn.syncfusion.com/ej2/20.4.48/bootstrap5.css" rel="stylesheet" />
                break;
            case (CssSource.FromBundledLocal):
                // Not done yet (uses webpack and npm)
                break;
            case (CssSource.FromFullLocal):
                // Not done yet (need to get full css to local wwwroot?)
                break;
        }

        switch (CustomCss)
        {
            case (CssSource.FromCdn):
                break;
            case (CssSource.FromBundledLocal):
                // Not done yet (uses webpack and npm)
                break;
            case (CssSource.FromFullLocal):
                <link href="~/css/sinorcaish-screen.css" rel="stylesheet" />
                <link href="~/css/CustomStyles.css" rel="stylesheet" />
                <link href="~/css/Site.css" rel="stylesheet" />
                break;
        }
    }
</head>
<body>
    @{
        Dictionary<string, object> HtmlAttribute = new Dictionary<string, object>() { { "class", "sidebar-menu" } };

        var folderTemplate = "<div class='e-folder'><div class='e-folder-name'>MVC Plant Data Application</div></div>";

        bool userAuthenticated = User?.Identity?.IsAuthenticated ?? false;
        if (userAuthenticated)
        {
            var givenname = User.Claims.FirstOrDefault(c => c.Type == "given_name").Value;
        };
    }

    <div id="wrapper">
        @*header-section declaration*@
        <div>
            <ejs-toolbar id="menuToolbar" Clicked="toolbarClicked">
                <e-toolbar-items>
                    <e-toolbar-item PrefixIcon="icon-menu" TooltipText="Menu"></e-toolbar-item>
                    <e-toolbar-item template="folderTemplate"></e-toolbar-item>
                </e-toolbar-items>
            </ejs-toolbar>
        </div>

        @*main content declaration*@
        <div id="maintext" class="main-content">
            <div class="content">
                @RenderBody()
            </div>
        </div>

        @*sidebar element declaration*@
        @await Component.InvokeAsync("SidebarMenu",
                         new { 
                             targetCss = ".main-content",
                             dockWidth = "50px",
                             width = "220px" }
                         )

        @*footer-section  declaration*@
        <div id="footer">
            A web page by Tim McMaster.
        </div>
    </div>


    @{
        switch (PackageJs)
        {
            case (JsSource.FromCdn):
                //<!-- TEST: Use CDN versions to check that JS is working -->
                //<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
                //<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
                //<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.17.0/dist/jquery.validate.min.js"></script>
                //<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
                //<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
                //<script src="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.1.3/build/ol.js"></script>

                <!-- Syncfusion ASP.NET Core controls scripts -->
                <script src="https://cdn.syncfusion.com/ej2/20.4.48/dist/ej2.min.js"></script>
                break;
            case (JsSource.FromBundledLocal):
                // Not done yet (uses webpack and npm)
                break;
            case (JsSource.FromFullLocal):
                // Not done yet (need to get full js to local wwwroot?)
                break;
        }

        switch (CustomJs)
        {
            case (JsSource.FromCdn):
                // Not possible - no cdn for my js
                break;
            case (JsSource.FromBundledLocal):
                // Uses webpack and npm
                //<script type="text/javascript" src="~/js/dist/app.bundle.js"></script>
                break;
            case (JsSource.FromFullLocal):
                break;
        }
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            sidebarObj = document.getElementById("menuSidebar").ej2_instances[0];
        });
        function toolbarClicked(args) {
            if (args.item.tooltipText == "Menu") {
                sidebarObj.toggle();
            }
        }
    </script>

    @RenderSection("scripts", false)

    <!-- Syncfusion Script Manager -->
    <ejs-scripts></ejs-scripts>

    <style>
        /* top toolbar styles */
        #wrapper .icon-menu {
            font-size: 24px;
        }

        #wrapper .icon-menu:before {
            content: '\e799';
            font-family: 'e-icons'
        }

        .e-folder {
            text-align: center;
            font-weight: 500;
            font-size: 16px
        }

        .e-folder-name {
            margin-top: -2px;
        }

        /* Specifies the level styles for toolbar */
        #wrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child {
            margin-left: 10px;
        }

        /* general sidebar stuff ? */
        #wrapper .sidebar-menu {
            z-index: 20 !important;
        }

        #wrapper .dock-menu.e-menu-wrapper {
            border: 0px;
        }

        #maintext.main-content {
            height: 800px;
        }

        #wrapper .sidebar-menu .e-menu-wrapper {
            border: 0px;
            height: 800px;
        }

        /* vertical-menu styles */
        .sidebar-menu .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {
            width: 220px;
        }

        .e-close .e-menu-wrapper ul .e-menu-item {
            width: 50px;
        }

        .e-close ul .e-menu-item.e-menu-caret-icon {
            padding-right: 12px;
        }

        .sidebar-menu.e-dock.e-close .e-menu-wrapper ul .e-menu-item .e-caret {
            display: none;
        }

        .sidebar-menu.e-dock.e-close .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon,
        .sidebar-menu.e-dock.e-close .e-menu-wrapper ul.e-vertical {
            min-width: 0;
            width: 50px !important;
        }

        .sidebar-menu.e-dock.e-close .e-menu-wrapper ul.e-menu {
            font-size: 0;
        }

        .sidebar-menu.e-dock.e-close .e-menu-item .e-menu-icon {
            font-size: 20px;
            padding: 0;
        }

        .sidebar-menu,
        .e-menu-wrapper,
        .e-menu-wrapper ul {
            overflow: hidden;
        }

        /* Specifies the level styles for sidebar for dock & closed state */
        #wrapper .sidebar-menu.e-dock.e-close .e-menu-wrapper ul .e-menu-item {
            padding: 0 9px;
        }

        /* Specifies the level styles for sidebar for dock & opened state */
        #wrapper .sidebar-menu .e-menu-wrapper ul .e-menu-item .e-menu-icon {
            margin: 0 15px 0 7px;
        }

        /* Specifies the border bottom styles for toolbar in light theme*/
        #wrapper .e-toolbar {
            border-bottom: 1px solid #eaeaeae0;
        }

        /* Specifies the border right color for the sidebar in light theme */
        .sidebar-menu {
            border-right: 1px solid #eaeaeae0;
        }

        /* menu icons */
        .dock-menu .icon {
            font-family: 'e-icons';
        }

        .dock-menu .icon-home:before {
            content: '\e87b';
        }

        .dock-menu .icon-plus:before {
            content: '\e805';
        }
    </style>
</body>
</html>
