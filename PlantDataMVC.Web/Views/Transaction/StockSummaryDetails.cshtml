@model PlantDataMVC.Web.Models.ViewModels.Transaction.TransactionStockSummaryDetailsViewModel
@{
    ViewBag.Title = "Stock Summary Details";
}
<h2>Details</h2>
<div class="container-lg">
    <fieldset>
        <legend>Stock Summary with Transactions </legend>

        <input asp-for="SpeciesId" type="hidden" />

        <input asp-for="ProductTypeId" type="hidden" />

        <div class="row mb-3">
            <label asp-for="SpeciesBinomial" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <p class="col-form-label">@Html.DisplayFor(model => model.SpeciesBinomial)</p>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="ProductTypeName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <p class="col-form-label">@Html.DisplayFor(model => model.ProductTypeName)</p>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="QuantityInStock" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <p class="col-form-label">@Html.DisplayFor(model => model.QuantityInStock)</p>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Transactions"></label>
            <div class="child-table">
                @await Component.InvokeAsync("TransactionGrid", new { transactions = Model.Transactions, gridOptions = Model.GridOptions, speciesId = Model.SpeciesId, productTypeId = Model.ProductTypeId })
            </div>
        </div>
    </fieldset>
    <p>
        <a asp-controller=@PlantDataMvcAppControllers.Transaction asp-action="StockSummary">Back to Stock Summary</a>
    </p>
</div>
