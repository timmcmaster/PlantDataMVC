// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace PlantDataMVC.Entities.Interfaces
{
    using PlantDataMVC.Entities.Models;

    public interface IPlantDataDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Genus> Genus { get; set; } // Genus
        System.Data.Entity.DbSet<JournalEntry> JournalEntries { get; set; } // JournalEntry
        System.Data.Entity.DbSet<JournalEntryType> JournalEntryTypes { get; set; } // JournalEntryType
        System.Data.Entity.DbSet<PlantStock> PlantStocks { get; set; } // PlantStock
        System.Data.Entity.DbSet<PriceListType> PriceListTypes { get; set; } // PriceListType
        System.Data.Entity.DbSet<ProductPrice> ProductPrices { get; set; } // ProductPrice
        System.Data.Entity.DbSet<ProductType> ProductTypes { get; set; } // ProductType
        System.Data.Entity.DbSet<SeedBatch> SeedBatches { get; set; } // SeedBatch
        System.Data.Entity.DbSet<SeedTray> SeedTrays { get; set; } // SeedTray
        System.Data.Entity.DbSet<Site> Sites { get; set; } // Site
        System.Data.Entity.DbSet<Species> Species { get; set; } // Species

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>
