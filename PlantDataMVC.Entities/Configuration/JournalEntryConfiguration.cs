// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace PlantDataMVC.Entities.Configuration
{
    using PlantDataMVC.Entities.Context;
    using PlantDataMVC.Entities.Models;

    // JournalEntry
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class JournalEntryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JournalEntry>
    {
        public JournalEntryConfiguration()
            : this("dbo")
        {
        }

        public JournalEntryConfiguration(string schema)
        {
            ToTable("JournalEntry", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PlantStockId).HasColumnName(@"PlantStockId").HasColumnType("int").IsRequired();
            Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("int").IsRequired();
            Property(x => x.JournalEntryTypeId).HasColumnName(@"JournalEntryTypeId").HasColumnType("int").IsRequired();
            Property(x => x.TransactionDate).HasColumnName(@"TransactionDate").HasColumnType("date").IsRequired();
            Property(x => x.Source).HasColumnName(@"Source").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.SeedTrayId).HasColumnName(@"SeedTrayId").HasColumnType("int").IsOptional();
            Property(x => x.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.SeedTray).WithMany(b => b.JournalEntries).HasForeignKey(c => c.SeedTrayId).WillCascadeOnDelete(false); // FK_Transactions_SeedTray
            HasRequired(a => a.JournalEntryType).WithMany(b => b.JournalEntries).HasForeignKey(c => c.JournalEntryTypeId).WillCascadeOnDelete(false); // FK_Transactions_TransactionType
            HasRequired(a => a.PlantStock).WithMany(b => b.JournalEntries).HasForeignKey(c => c.PlantStockId).WillCascadeOnDelete(false); // FK_Transactions_PlantStock
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
