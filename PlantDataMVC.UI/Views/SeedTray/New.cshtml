@using PlantDataMVC.DTO.Dtos
@using PlantDataMVC.UI.Controllers.Queries
@using PlantDataMVC.UI.Helpers
@model PlantDataMVC.UI.Models.ViewModels.SeedTray.SeedTrayNewViewModel

@{
    ViewBag.Title = "New";
}

<h2>New</h2>

@using (Html.BeginForm("Create", "SeedTray"))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Seed Tray</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.SeedBatchId)
        </div>
        <div class="editor-field">
            @*TODO: Want better representation for display value*@
            @Html.QueryDropDownFor(
                () => "SeedBatchId",
                model => model.SeedBatchId,
                new ListQuery<SeedBatchDto>(),
                p => p.Id,
                p => string.Concat(p.SpeciesId, p.Location, p.DateCollected))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DatePlanted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DatePlanted)
            @Html.ValidationMessageFor(model => model.DatePlanted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Treatment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Treatment)
            @Html.ValidationMessageFor(model => model.Treatment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ThrownOut)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ThrownOut)
            @Html.ValidationMessageFor(model => model.ThrownOut)
        </div>

        <p>
            <input type="submit" value="Create"/>
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Index", "Index")
</div>

