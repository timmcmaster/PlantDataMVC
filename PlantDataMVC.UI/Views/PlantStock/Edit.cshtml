@using PlantDataMVC.UI.Helpers
@model PlantDataMVC.UI.Models.ViewModels.PlantStockEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Update", "PlantStock"))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Plant Stock</legend>

        @Html.HiddenFor(model => model.Id)

        @Html.HiddenFor(model => model.SpeciesId)

        <div class="editor-label">
            @Html.LabelFor(model => model.SpeciesBinomial)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.SpeciesBinomial)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.ProductType)
        </div>
        <div class="editor-field">
            @Html.DropDownFor(() => "ProductType.Id", m => m.ProductType, p => p.Name, p => p.Id)
            @*@Html.DropDownListFor(m => m.ProductTypeId, new SelectList(Model.ProductTypes, "Id", "Name", Model.ProductTypeId), "Select an option")*@
            @*@Html.ValidationMessageFor(model => model.ProductTypeId)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuantityInStock)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuantityInStock)
            @Html.ValidationMessageFor(model => model.QuantityInStock)
        </div>

        <p>
            <input type="submit" value="Update" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Index", "Index")
</div>

