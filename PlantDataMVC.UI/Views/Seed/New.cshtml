@using PlantDataMVC.UI.Controllers.Queries
@using PlantDataMVC.UI.Helpers
@using PlantDataMVC.UI.Models.ViewModels
@model PlantDataMVC.UI.Models.ViewModels.PlantSeedNewViewModel

@{
    ViewBag.Title = "New";
    Type siteListItemType = typeof(SiteListViewModel);
}

<h2>New</h2>

@using (Html.BeginForm("Create", "Seed"))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Seed Batch</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.PlantSpecies)
        </div>
        <div class="editor-field">
            @*TODO: Should be using genus and species for display value*@
            @*@Html.DropDownFor(() => "SpeciesId", model => model.PlantSpecies, p => p.SpecificName, p => p.Id)*@
            @*@Html.DropDownListFor(m => m.ProductTypeId, new SelectList(Model.ProductTypes, "Id", "Name", Model.ProductTypeId), "Select an option")*@
            @*@Html.ValidationMessageFor(model => model.ProductTypeId)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Site)
        </div>
        <div class="editor-field">
            @* TODO: Need a get ALL items option for dropdown *@
            @{
                var x = 1; 
            }
            @Html.QueryDropDown2For(new SiteListViewModel(), () => "SiteId", model => model.Site.Id, new SiteIndexQuery(1, 100), p => p.SiteName, p => p.Id)
            @*@Html.DropDownListFor(m => m.ProductTypeId, new SelectList(Model.ProductTypes, "Id", "Name", Model.ProductTypeId), "Select an option")*@
            @*@Html.ValidationMessageFor(model => model.ProductTypeId)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateCollected)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateCollected)
            @Html.ValidationMessageFor(model => model.DateCollected)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Notes)
        </div>
        <div class="editor-field">

            @Html.EditorFor(model => model.Notes)
            @Html.ValidationMessageFor(model => model.Notes)
        </div>
        <p>
            <input type="submit" value="Create"/>
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Index", "Index")
</div>

